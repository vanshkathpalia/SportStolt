
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  name      String?
  videos    Video[]
  comments  Comment[]
  likes     Like[]
  tweets    Tweet[]
  photos    Photo[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  post      Post[]
}

model Video {
  id        String    @id @default(cuid())
  title     String
  url       String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  userId    String
  videoId   String
  user      User     @relation(fields: [userId], references: [id])
  video     Video    @relation(fields: [videoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  videoId   String
  user      User     @relation(fields: [userId], references: [id])
  video     Video    @relation(fields: [videoId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, videoId])
}

model Tweet {
  id        String   @id @default(cuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id        String   @id @default(cuid())
  url       String
  caption   String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id  Int    @id @default(autoincrement())
  authorId   String
  content    String
  title      String
  published Boolean  @default(false)
  author    User   @relation(fields: [authorId], references: [id])
}